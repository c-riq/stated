name: CI tests
on: pull_request
jobs:
  frontend_unit_tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
      - name: Install dependencies
        run: npm install
        working-directory: ./frontend
      - name: Run tests
        run: npm test
        working-directory: ./frontend
      - name: Transpile
        run: npx tsc --noEmit
        working-directory: ./frontend
  e2e_tests:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run backend
        run: docker compose -f "docker-compose.yml" up -d
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libasound2 libicu-dev libffi-dev libx264-dev
      - name: Install dependencies
        run: npm ci
        working-directory: ./frontend
      - name: Install Browsers
        run: npx playwright install --with-deps
        working-directory: ./frontend
      - name: Run tests
        run: npx playwright test --project=chromium
        working-directory: ./frontend
      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  backend_tests:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 22.x
      - name: Install dependencies
        run: npm install
        working-directory: ./backend
      - name: Run tests
        run: npm test
        working-directory: ./backend
      - name: Transpile
        run: npx tsc --noEmit
        working-directory: ./backend

  p2p_test:
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: 22.x
  
    - name: Start test nodes
      run: docker compose -f "test/integration/p2p/docker-compose.yml" up -d

    - name: Run tests
      run: node test/integration/p2p/test.js

    - name: Stop containers
      if: always()
      run: docker compose -f "test/integration/p2p/docker-compose.yml" down

  migration_test:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Start databases
      run: docker compose -f "test/integration/migration/docker-compose.yml" up -d

    - name: Install node
      uses: actions/setup-node@v3
      with:
        node-version: 22.x
  
    - name: Install backend dependencies
      working-directory: ./backend/
      run: npm i 

    - name: Build backend
      working-directory: ./backend/
      run: npm run build

    - name: Install test dependencies
      working-directory: ./test/integration/migration
      run: npm i
    
    - name: Install postgres client
      run: |
        sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list'
        wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add -
        sudo apt-get update
        sudo apt-get -y install postgresql-client-17

    - name: Run test
      working-directory: ./test/integration/migration
      run: node test.js

    - name: Stop containers
      if: always()
      run: docker compose -f "test/integration/migration/docker-compose.yml" down
